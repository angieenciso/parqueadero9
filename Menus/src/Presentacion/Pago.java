/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Presentacion;

import static java.lang.String.valueOf;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import javax.swing.JOptionPane;

/**
 *
 * @author Fredi
 */
public class Pago extends javax.swing.JFrame {

    /**
     * Creates new form Pago
     */
    public Pago() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtticket = new javax.swing.JTextField();
        btnpago = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("CANCELAR");

        jLabel3.setIcon(new javax.swing.ImageIcon("C:\\Users\\Fredi\\Downloads\\barra.jpg")); // NOI18N

        jLabel2.setText("Numero de Ticket");

        txtticket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtticketActionPerformed(evt);
            }
        });
        txtticket.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtticketKeyTyped(evt);
            }
        });

        btnpago.setText("Pagar");
        btnpago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpagoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txtticket, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(45, 45, 45)))
                .addGap(64, 64, 64))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnpago)
                .addGap(99, 99, 99))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 9, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtticket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnpago)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtticketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtticketActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtticketActionPerformed

    private void btnpagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpagoActionPerformed
        // TODO add your handling code here:
        try{
            ConectarBD conexion= new ConectarBD();
            String id = txtticket.getText();
            int num = Integer.parseInt(id);
            Statement consulta;
            Statement consulta1;
          
        
            consulta=conexion.getConexion().createStatement();
            ResultSet resultado = consulta.executeQuery("select estado from controlnoabonado where n_ticket=" + id+ "");
            
            while(resultado.next())
            {
            String estado= resultado.getString("estado");
            System.out.println(estado);
                if (estado.equals("cancelado")) {
                    JOptionPane.showMessageDialog(null, "YA CANCELO EL TICKET", "AUTORIZADO", JOptionPane.INFORMATION_MESSAGE);
                    this.dispose();
                    new SalidaNoAbonado().setVisible(true); 
                }
                else {
                    java.util.Date utilDate = new java.util.Date(); //fecha actual
                    long fecha = utilDate.getTime();
                    java.sql.Date sqlDate = new java.sql.Date(fecha);
                    java.sql.Time sqlTime = new java.sql.Time(fecha);
                    java.sql.Timestamp sqlTimestamp = new java.sql.Timestamp(fecha);

                    String instruccion = "update controlnoabonado set fecha_salida=? where n_ticket=" + num + "";
                    conexion.sentencia = conexion.getConexion().prepareStatement(instruccion);
                    conexion.sentencia.setTimestamp(1, sqlTimestamp);
                    conexion.sentencia.execute();

                    consulta1 = conexion.getConexion().createStatement();
                    ResultSet resultado1 = consulta1.executeQuery("select fecha_ingreso,fecha_salida  from controlnoabonado where n_ticket=" + num + "");
                    System.out.println(resultado1);
                    while (resultado1.next()) {
                        Timestamp entrada = resultado1.getTimestamp("fecha_ingreso");//guardamos un campo de resultado en una variable
                        Timestamp salida = resultado1.getTimestamp("fecha_salida");//guardamos un campo de resultado en una variable

                        long valorpago;
                        valorpago = pago(entrada, salida);
                        int saldo = new Long(valorpago).intValue();
                        // int saldo= Long.parseLong(valorpago);
                        int seleccion = JOptionPane.showOptionDialog(this, "Usted debe pagar $" + saldo + "",
                                "CANCELAR", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE,
                                null, new Object[]{"Si", "No"}, "Si");
                        if ((seleccion + 1) == 1) {
                            try {

                                String pago = "update controlnoabonado set valor=?,estado=? where n_ticket=" + num + "";
                                conexion.sentencia = conexion.getConexion().prepareStatement(pago);
                                conexion.sentencia.setInt(1, saldo);
                                conexion.sentencia.setString(2, "cancelado");
                                conexion.sentencia.execute();

                                JOptionPane.showMessageDialog(this, "Cuenta Cancelada", "Informacion", JOptionPane.INFORMATION_MESSAGE);
                                conexion.getConexion().close();
                                this.dispose();
                                new Pago().setVisible(true);

                            } catch (SQLException e) {
                                JOptionPane.showMessageDialog(this, "Error SQL" + e, "Informacion", JOptionPane.ERROR_MESSAGE);
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Cuenta NO cancelada", "Informacion", JOptionPane.INFORMATION_MESSAGE);
                            this.dispose();
                            new Pago().setVisible(true);
                        }

                        System.out.println(entrada + "---" + salida);//imprimimos el contenido del select 
                        System.out.println(valorpago);
                    }
                    // JOptionPane.showMessageDialog(this, "Registro Modificado", "Informacion", JOptionPane.INFORMATION_MESSAGE);
                    conexion.getConexion().close();
                }
            
            }
            resultado.close();

            
           
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this, "Error SQL"+e, "Informacion", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnpagoActionPerformed

    private void txtticketKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtticketKeyTyped
        // TODO add your handling code here:
         char car = evt.getKeyChar();
        if (txtticket.getText().length() >= 8) {
            evt.consume();
        }
        if ((car < '0' || car > '9')) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "SOLO PUEDE INGRESAR NUMEROS", "ERROR", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_txtticketKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pago.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pago.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pago.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pago.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pago().setVisible(true);
            }
        });
    }
    
    public  long pago (java.util.Date entrada, java.util.Date salida)
            
    {
        long pago;
        //los milisegundos
        long diferenciaMils = salida.getTime() - entrada.getTime();
        //obtenemos los segundos
        long segundos = diferenciaMils / 1000;
        //obtenemos las horas
        long horas = segundos / 3600;
        //restamos las horas para continuar con minutos
        segundos -= horas * 3600;
        //igual que el paso anterior
        long minutos = segundos / 60;
        segundos -= minutos * 60;

        System.out.println(horas+ "  "+ minutos+" " + segundos);

        pago = (horas * 1000) + (minutos * 300) + (segundos * 10);
        return pago;

    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnpago;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtticket;
    // End of variables declaration//GEN-END:variables
}
